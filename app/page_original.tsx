'use client';

import React, { useState } from 'react';
import { Menu, X, Upload, MessageCircle, Mic, FileCheck, Bell, ScanLine, Volume2, HelpCircle } from 'lucide-react';
import { useRouter } from 'next/navigation';
import { useLanguage } from '../contexts/language_context';
import Sidebar from '../components/sidebar_component';
import LanguageToggle from '../components/language_toggle';
import SchemeCarousel from '../components/scheme_carousel';
import UploadModal from '../components/upload_modal';
import SettingsModal from '../components/settings_modal';
import OfflineIndicator from '../components/offline_indicator';

export default function HomePage() {
  const router = useRouter();
  const { t, language } = useLanguage();
  const [isSidebarOpen, setIsSidebarOpen] = useState(false);
  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);
  const [isSettingsOpen, setIsSettingsOpen] = useState(false);
  const [isHelpOpen, setIsHelpOpen] = useState(false);
  const [helpCategory, setHelpCategory] = useState('general');
  const [showTutorial, setShowTutorial] = useState(false);
  const [tutorialStep, setTutorialStep] = useState(0);

  const handleOpenSettings = () => {
    setIsSettingsOpen(true);
    setIsSidebarOpen(false);
  };

  // Comprehensive help content for rural users
  const helpContent = {
    general: {
      title: language === 'hi' ? 'ЁЯПа рдореБрдЦреНрдп рд╕рд╣рд╛рдпрддрд╛' : 'ЁЯПа General Help',
      audio: language === 'hi' 
        ? 'рд╕реНрдХреАрдо рд╕рд╛рдереА рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИред рдпрд╣ рдПрдкреНрдк рдЖрдкрдХреЛ рд╕рд░рдХрд╛рд░реА рдпреЛрдЬрдирд╛рдУрдВ рдХреА рдЬрд╛рдирдХрд╛рд░реА рджреЗрддрд╛ рд╣реИред рдЖрдк рдЕрдкрдиреА рдЬрд╛рдирдХрд╛рд░реА рдЕрдкрд▓реЛрдб рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ, рдЪреИрдЯ рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ, рдФрд░ рдЕрдкрдиреЗ рдЖрд╡реЗрджрди рджреЗрдЦ рд╕рдХрддреЗ рд╣реИрдВред'
        : 'Welcome to Scheme Saathi. This app helps you find government schemes. You can upload information, chat, and view your applications.',
      steps: language === 'hi' ? [
        'ЁЯУЛ рд╕рдмрд╕реЗ рдкрд╣рд▓реЗ рдЕрдкрдиреА рдЬрд╛рдирдХрд╛рд░реА рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ',
        'ЁЯТм рд╕рд╡рд╛рд▓ рдкреВрдЫрдиреЗ рдХреЗ рд▓рд┐рдП рдЪреИрдЯ рдХрд╛ рдЗрд╕реНрддреЗрдорд╛рд▓ рдХрд░реЗрдВ', 
        'ЁЯФН рдЕрдкрдиреЗ рд▓рд┐рдП рдЙрдкрдпреБрдХреНрдд рдпреЛрдЬрдирд╛рдПрдВ рдЦреЛрдЬреЗрдВ',
        'ЁЯУ▒ рдЖрд╡реЗрджрди рдХреА рд╕реНрдерд┐рддрд┐ рдЬрд╛рдВрдЪреЗрдВ'
      ] : [
        'ЁЯУЛ First upload your information',
        'ЁЯТм Use chat to ask questions',
        'ЁЯФН Find suitable schemes for you', 
        'ЁЯУ▒ Check application status'
      ]
    },
    upload: {
      title: language === 'hi' ? 'ЁЯУЛ рдЬрд╛рдирдХрд╛рд░реА рдЕрдкрд▓реЛрдб рдХрд░рдирд╛' : 'ЁЯУЛ Upload Information',
      audio: language === 'hi'
        ? 'рдЬрд╛рдирдХрд╛рд░реА рдЕрдкрд▓реЛрдб рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдиреАрд▓реЗ рдмрдЯрди рдХреЛ рджрдмрд╛рдПрдВред рдЕрдкрдирд╛ рдирд╛рдо, рдЙрдореНрд░, рдЖрдзрд╛рд░ рдирдВрдмрд░, рдЖрдп рдФрд░ рдкрддрд╛ рднрд░реЗрдВред рдпрд╣ рдЬрд╛рдирдХрд╛рд░реА рдЖрдкрдХреЛ рд╕рд╣реА рдпреЛрдЬрдирд╛рдПрдВ рд╕реБрдЭрд╛рдиреЗ рдХреЗ рд▓рд┐рдП рдЬрд░реВрд░реА рд╣реИред'
        : 'To upload information, press the blue button. Fill your name, age, Aadhaar number, income and address. This information is needed to suggest right schemes.',
      steps: language === 'hi' ? [
        'ЁЯФ╡ рдиреАрд▓рд╛ "рдЬрд╛рдирдХрд╛рд░реА рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ" рдмрдЯрди рджрдмрд╛рдПрдВ',
        'тЬПя╕П рд╕рднреА рдЬрд╛рдирдХрд╛рд░реА рд╕рд╣реА-рд╕рд╣реА рднрд░реЗрдВ',
        'ЁЯЖФ рдЖрдзрд╛рд░ рдирдВрдмрд░ 12 рдЕрдВрдХреЛрдВ рдХрд╛ рд╣реЛрдирд╛ рдЪрд╛рд╣рд┐рдП',
        'ЁЯТ░ рд╕рд╛рд▓рд╛рдирд╛ рдЖрдп рд░реБрдкрдпреЛрдВ рдореЗрдВ рд▓рд┐рдЦреЗрдВ',
        'тЬЕ "рдЬрдорд╛ рдХрд░реЗрдВ" рдмрдЯрди рджрдмрд╛рдПрдВ'
      ] : [
        'ЁЯФ╡ Press blue "Upload Information" button',
        'тЬПя╕П Fill all information correctly',
        'ЁЯЖФ Aadhaar number should be 12 digits',
        'ЁЯТ░ Write annual income in rupees',
        'тЬЕ Press "Submit" button'
      ]
    },
    chat: {
      title: language === 'hi' ? 'ЁЯТм рдЪреИрдЯ рд╕рд╣рд╛рдпрддрд╛' : 'ЁЯТм Chat Help',
      audio: language === 'hi'
        ? 'рдЪреИрдЯ рдореЗрдВ рдЖрдк рд╕рд░рдХрд╛рд░реА рдпреЛрдЬрдирд╛рдУрдВ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рд╕рд╡рд╛рд▓ рдкреВрдЫ рд╕рдХрддреЗ рд╣реИрдВред рдЬреИрд╕реЗ рдХрд┐рд╕рд╛рди рдпреЛрдЬрдирд╛, рдорд╣рд┐рд▓рд╛ рдпреЛрдЬрдирд╛, рдпрд╛ рдмреБрдЬреБрд░реНрдЧреЛрдВ рдХреЗ рд▓рд┐рдП рдпреЛрдЬрдирд╛ред рдЖрд╕рд╛рди рднрд╛рд╖рд╛ рдореЗрдВ рд╕рд╡рд╛рд▓ рдкреВрдЫреЗрдВред'
        : 'In chat you can ask questions about government schemes. Like farmer schemes, women schemes, or schemes for elderly. Ask questions in simple language.',
      steps: language === 'hi' ? [
        'ЁЯТЪ рд╣рд░рд╛ "рдЯреЗрдХреНрд╕реНрдЯ рдЪреИрдЯрдмреЙрдЯ" рдмрдЯрди рджрдмрд╛рдПрдВ',
        'тЭУ рдЖрд╕рд╛рди рднрд╛рд╖рд╛ рдореЗрдВ рд╕рд╡рд╛рд▓ рдкреВрдЫреЗрдВ',
        'ЁЯМ╛ рдЬреИрд╕реЗ: "рдХрд┐рд╕рд╛рди рдХреЗ рд▓рд┐рдП рдХреНрдпрд╛ рдпреЛрдЬрдирд╛ рд╣реИ?"',
        'ЁЯСй "рдорд╣рд┐рд▓рд╛рдУрдВ рдХреЗ рд▓рд┐рдП рдХреЛрдИ рдпреЛрдЬрдирд╛?"',
        'ЁЯТб рдпреЛрдЬрдирд╛ рдХреА рдкреВрд░реА рдЬрд╛рдирдХрд╛рд░реА рдорд┐рд▓реЗрдЧреА'
      ] : [
        'ЁЯТЪ Press green "Text Chatbot" button',
        'тЭУ Ask questions in simple language',
        'ЁЯМ╛ Like: "What schemes for farmers?"',
        'ЁЯСй "Any schemes for women?"',
        'ЁЯТб Get complete scheme information'
      ]
    },
    voice: {
      title: language === 'hi' ? 'ЁЯОд рдЖрд╡рд╛рдЬ рд╕рд╣рд╛рдпрддрд╛' : 'ЁЯОд Voice Help',
      audio: language === 'hi'
        ? 'рдЖрд╡рд╛рдЬ рд╕реЗ рдмрд╛рдд рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдмреИрдВрдЧрдиреА рдмрдЯрди рджрдмрд╛рдПрдВред рдлрд┐рд░ рдорд╛рдЗрдХ рдмрдЯрди рджрдмрд╛рдХрд░ рдЕрдкрдирд╛ рд╕рд╡рд╛рд▓ рдмреЛрд▓реЗрдВред рдЖрдк рд╣рд┐рдВрджреА рдпрд╛ рдЕрдВрдЧреНрд░реЗрдЬреА рдореЗрдВ рдмрд╛рдд рдХрд░ рд╕рдХрддреЗ рд╣реИрдВред'
        : 'To talk with voice, press purple button. Then press mic button and speak your question. You can speak in Hindi or English.',
      steps: language === 'hi' ? [
        'ЁЯЯг рдмреИрдВрдЧрдиреА "рд╡реЙрдпрд╕ рдЕрд╕рд┐рд╕реНрдЯреЗрдВрдЯ" рдмрдЯрди рджрдмрд╛рдПрдВ',
        'ЁЯОд рдорд╛рдЗрдХ рдмрдЯрди рджрдмрд╛рдПрдВ',
        'ЁЯЧгя╕П рд╕рд╛рдл рдЖрд╡рд╛рдЬ рдореЗрдВ рд╕рд╡рд╛рд▓ рдмреЛрд▓реЗрдВ',
        'тП╣я╕П рдмрд╛рдд рдЦрддреНрдо рдХрд░рдХреЗ "рд░реБрдХреЗрдВ" рджрдмрд╛рдПрдВ',
        'ЁЯСВ рдЬрд╡рд╛рдм рд╕реБрдиреЗрдВ'
      ] : [
        'ЁЯЯг Press purple "Voice Assistant" button',
        'ЁЯОд Press microphone button',
        'ЁЯЧгя╕П Speak your question clearly',
        'тП╣я╕П Press "Stop" when finished',
        'ЁЯСВ Listen to the answer'
      ]
    },
    documents: {
      title: language === 'hi' ? 'ЁЯУД рджрд╕реНрддрд╛рд╡реЗрдЬрд╝ рд╕реНрдХреИрди рдХрд░рдирд╛' : 'ЁЯУД Document Scanning',
      audio: language === 'hi'
        ? 'рджрд╕реНрддрд╛рд╡реЗрдЬрд╝ рд╕реНрдХреИрди рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рд╣рд░реЗ рд░рдВрдЧ рдХрд╛ OCR рдмрдЯрди рджрдмрд╛рдПрдВред рдЖрдзрд╛рд░ рдХрд╛рд░реНрдб, рд░рд╛рд╢рди рдХрд╛рд░реНрдб, рдпрд╛ рдмреИрдВрдХ рдкрд╛рд╕рдмреБрдХ рдХреА рдлреЛрдЯреЛ рдЦреАрдВрдЪреЗрдВред рдпрд╣ рдЖрдкрдХреА рдЬрд╛рдирдХрд╛рд░реА рдЕрдкрдиреЗ рдЖрдк рднрд░ рджреЗрдЧрд╛ред'
        : 'To scan documents, press green OCR button. Take photo of Aadhaar card, ration card, or bank passbook. It will automatically fill your information.',
      steps: language === 'hi' ? [
        'ЁЯЯв рд╣рд░рд╛ "рджрд╕реНрддрд╛рд╡реЗрдЬрд╝ OCR" рдмрдЯрди рджрдмрд╛рдПрдВ',
        'ЁЯУЛ рджрд╕реНрддрд╛рд╡реЗрдЬрд╝ рдХрд╛ рдкреНрд░рдХрд╛рд░ рдЪреБрдиреЗрдВ',
        'ЁЯУ╖ рд╕рд╛рдл рдлреЛрдЯреЛ рдЦреАрдВрдЪреЗрдВ рдпрд╛ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ',
        'тП│ рд╕реНрдХреИрди рд╣реЛрдиреЗ рдХрд╛ рдЗрдВрддрдЬрд╛рд░ рдХрд░реЗрдВ',
        'тЬЕ рдЬрд╛рдирдХрд╛рд░реА рдЪреЗрдХ рдХрд░реЗрдВ рдФрд░ рд╕реЗрд╡ рдХрд░реЗрдВ'
      ] : [
        'ЁЯЯв Press green "Document OCR" button',
        'ЁЯУЛ Choose document type',
        'ЁЯУ╖ Take clear photo or upload',
        'тП│ Wait for scanning',
        'тЬЕ Check information and save'
      ]
    },
    applications: {
      title: language === 'hi' ? 'ЁЯУ▒ рдЖрд╡реЗрджрди рджреЗрдЦрдирд╛' : 'ЁЯУ▒ View Applications',
      audio: language === 'hi'
        ? 'рдЕрдкрдиреЗ рдЖрд╡реЗрджрди рджреЗрдЦрдиреЗ рдХреЗ рд▓рд┐рдП рдкреАрд▓рд╛ рдмрдЯрди рджрдмрд╛рдПрдВред рдпрд╣рд╛рдВ рдЖрдк рджреЗрдЦ рд╕рдХрддреЗ рд╣реИрдВ рдХрд┐ рдЖрдкрдХрд╛ рдЖрд╡реЗрджрди рдХрд╣рд╛рдВ рддрдХ рдкрд╣реБрдВрдЪрд╛ рд╣реИред рд▓рдВрдмрд┐рдд, рд╕реНрд╡реАрдХреГрдд рдпрд╛ рдЕрд╕реНрд╡реАрдХреГрдд рдХреА рдЬрд╛рдирдХрд╛рд░реА рдорд┐рд▓реЗрдЧреАред'
        : 'To view applications, press yellow button. Here you can see how far your application has reached. You will get information about pending, approved or rejected status.',
      steps: language === 'hi' ? [
        'ЁЯЯб рдкреАрд▓рд╛ "рдЖрд╡реЗрджрди рдЯреНрд░реИрдХрд░" рдмрдЯрди рджрдмрд╛рдПрдВ',
        'ЁЯУЛ рдЕрдкрдиреЗ рд╕рднреА рдЖрд╡реЗрджрди рджреЗрдЦреЗрдВ',
        'ЁЯФН рд╕реНрдерд┐рддрд┐ рдЪреЗрдХ рдХрд░реЗрдВ (рд▓рдВрдмрд┐рдд/рд╕реНрд╡реАрдХреГрдд)',
        'ЁЯУЕ рдЕрдЧрд▓реА рдбреЗрдЯ рдХреА рдЬрд╛рдирдХрд╛рд░реА рд▓реЗрдВ',
        'ЁЯУЮ рдЬрд░реВрд░рдд рд╣реЛ рддреЛ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВ'
      ] : [
        'ЁЯЯб Press yellow "Application Tracker" button',
        'ЁЯУЛ View all your applications',
        'ЁЯФН Check status (pending/approved)',
        'ЁЯУЕ Get next date information',
        'ЁЯУЮ Contact if needed'
      ]
    },
    offline: {
      title: language === 'hi' ? 'ЁЯУ╢ рдСрдлрд╝рд▓рд╛рдЗрди рдореЛрдб' : 'ЁЯУ╢ Offline Mode',
      audio: language === 'hi'
        ? 'рдЗрдВрдЯрд░рдиреЗрдЯ рди рд╣реЛрдиреЗ рдкрд░ рднреА рдЖрдк рдХреБрдЫ рдХрд╛рдо рдХрд░ рд╕рдХрддреЗ рд╣реИрдВред рдкрд╣рд▓реЗ рд╕реЗ рд╕реЗрд╡ рдХреА рдЧрдИ рдЬрд╛рдирдХрд╛рд░реА рджреЗрдЦ рд╕рдХрддреЗ рд╣реИрдВ, рдлреЙрд░реНрдо рднрд░ рд╕рдХрддреЗ рд╣реИрдВред рдирдпрд╛ рдЖрд╡реЗрджрди рднреЗрдЬрдиреЗ рдХреЗ рд▓рд┐рдП рдЗрдВрдЯрд░рдиреЗрдЯ рдЪрд╛рд╣рд┐рдПред'
        : 'Even without internet you can do some work. You can view previously saved information, fill forms. Internet is needed to submit new applications.',
      steps: language === 'hi' ? [
        'ЁЯУ▒ рдСрдлрд╝рд▓рд╛рдЗрди рдореЛрдб рдЕрдкрдиреЗ рдЖрдк рдЪрд╛рд▓реВ рд╣реЛ рдЬрд╛рддрд╛ рд╣реИ',
        'тЬЕ рдкреБрд░рд╛рдирд╛ рдбреЗрдЯрд╛ рджреЗрдЦ рд╕рдХрддреЗ рд╣реИрдВ',
        'тЬЕ рдлреЙрд░реНрдо рднрд░ рд╕рдХрддреЗ рд╣реИрдВ',
        'тЬЕ рдпреЛрдЬрдирд╛ рдХреА рдЬрд╛рдирдХрд╛рд░реА рдкрдврд╝ рд╕рдХрддреЗ рд╣реИрдВ',
        'тЭМ рдирдпрд╛ рдЖрд╡реЗрджрди рдирд╣реАрдВ рднреЗрдЬ рд╕рдХрддреЗ'
      ] : [
        'ЁЯУ▒ Offline mode starts automatically',
        'тЬЕ Can view old data',
        'тЬЕ Can fill forms',
        'тЬЕ Can read scheme information',
        'тЭМ Cannot submit new applications'
      ]
    },
    troubleshooting: {
      title: language === 'hi' ? 'ЁЯФз рд╕рдорд╕реНрдпрд╛ рд╕рдорд╛рдзрд╛рди' : 'ЁЯФз Troubleshooting',
      audio: language === 'hi'
        ? 'рдЕрдЧрд░ рдПрдкреНрдк рдореЗрдВ рдХреЛрдИ рд╕рдорд╕реНрдпрд╛ рдЖ рд░рд╣реА рд╣реИ рддреЛ рдШрдмрд░рд╛рдПрдВ рдирд╣реАрдВред рдЗрдВрдЯрд░рдиреЗрдЯ рдЪреЗрдХ рдХрд░реЗрдВ, рдлреЛрди рд░реАрд╕реНрдЯрд╛рд░реНрдЯ рдХрд░реЗрдВ, рдпрд╛ рд╣реЗрд▓реНрдкрд▓рд╛рдЗрди рдкрд░ рдХреЙрд▓ рдХрд░реЗрдВред'
        : 'If you face any problem in the app, do not worry. Check internet, restart phone, or call helpline.',
      steps: language === 'hi' ? [
        'ЁЯУ╢ рдЗрдВрдЯрд░рдиреЗрдЯ рдХрдиреЗрдХреНрд╢рди рдЪреЗрдХ рдХрд░реЗрдВ',
        'ЁЯФД рдПрдкреНрдк рдмрдВрдж рдХрд░рдХреЗ рдлрд┐рд░ рдЦреЛрд▓реЗрдВ',
        'ЁЯУ▒ рдлреЛрди рд░реАрд╕реНрдЯрд╛рд░реНрдЯ рдХрд░реЗрдВ',
        'ЁЯз╣ рдХреИрд╢ рдХреНрд▓рд┐рдпрд░ рдХрд░реЗрдВ',  
        'ЁЯУЮ рд╣реЗрд▓реНрдкрд▓рд╛рдЗрди: 1800-111-3333'
      ] : [
        'ЁЯУ╢ Check internet connection',
        'ЁЯФД Close and reopen app',
        'ЁЯУ▒ Restart phone',
        'ЁЯз╣ Clear cache',
        'ЁЯУЮ Helpline: 1800-111-3333'
      ]
    }
  };

  // Visual tutorial mode
  const tutorialSteps = [
    {
      target: '.upload-button',
      title: language === 'hi' ? 'рдпрд╣рд╛рдВ рдЕрдкрдиреА рдЬрд╛рдирдХрд╛рд░реА рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ' : 'Upload your information here',
      description: language === 'hi' ? 'рд╕рдмрд╕реЗ рдкрд╣рд▓реЗ рдпрд╣рд╛рдВ рдХреНрд▓рд┐рдХ рдХрд░реЗрдВ' : 'Click here first'
    },
    {
      target: '.chat-button', 
      title: language === 'hi' ? 'рд╕рд╡рд╛рд▓ рдкреВрдЫрдиреЗ рдХреЗ рд▓рд┐рдП рдЪреИрдЯ рдХрд░реЗрдВ' : 'Chat to ask questions',
      description: language === 'hi' ? 'рдпреЛрдЬрдирд╛рдУрдВ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдкреВрдЫреЗрдВ' : 'Ask about schemes'
    },
    {
      target: '.voice-button',
      title: language === 'hi' ? 'рдЖрд╡рд╛рдЬ рд╕реЗ рдмрд╛рдд рдХрд░реЗрдВ' : 'Talk with voice',
      description: language === 'hi' ? 'рдмреЛрд▓рдХрд░ рд╕рд╡рд╛рд▓ рдкреВрдЫреЗрдВ' : 'Ask questions by speaking'
    }
  ];

  const startTutorial = () => {
    setShowTutorial(true);
    setTutorialStep(0);
    setIsHelpOpen(false);
  };

  const nextTutorialStep = () => {
    if (tutorialStep < tutorialSteps.length - 1) {
      setTutorialStep(tutorialStep + 1);
    } else {
      setShowTutorial(false);
      setTutorialStep(0);
    }
  };

  // Context-aware help - detect what user might need help with
  const getContextualHelp = () => {
    const path = window.location.pathname;
    if (path.includes('/chat')) return 'chat';
    if (path.includes('/voice')) return 'voice';  
    if (path.includes('/ocr')) return 'documents';
    if (path.includes('/applications')) return 'applications';
    if (path.includes('/auth')) return 'general';
    return 'general';
  };

  // Smart help button that opens relevant help
  const openSmartHelp = () => {
    const context = getContextualHelp();
    setHelpCategory(context);
    setIsHelpOpen(true);
    
    // Auto-play audio for immediate help
    setTimeout(() => speakHelp(context), 500);
  };

  // Enhanced audio help with categories
  const speakHelp = (category = helpCategory) => {
    if ('speechSynthesis' in window) {
      const content = helpContent[category];
      const utterance = new SpeechSynthesisUtterance(content.audio);
      utterance.lang = language === 'hi' ? 'hi-IN' : 'en-US';
      utterance.rate = 0.8; // Slower for better understanding
      speechSynthesis.speak(utterance);
    }
  };

  // Main action buttons configuration
  const mainActions = [
    {
      icon: Upload,
      label: t('upload_info'),
      description: t('upload_info_desc'),
      color: 'bg-blue-500 hover:bg-blue-600',
      onClick: () => setIsUploadModalOpen(true),
    },
    {
      icon: MessageCircle,
      label: t('text_chatbot'),
      description: t('text_chatbot_desc'),
      color: 'bg-green-500 hover:bg-green-600',
      onClick: () => router.push('/chat'),
    },
    {
      icon: Mic,
      label: t('voice_assistant'),
      description: t('voice_assistant_desc'),
      color: 'bg-purple-500 hover:bg-purple-600',
      onClick: () => router.push('/voice'),
    },
    {
      icon: FileCheck,
      label: t('application_tracker'),
      description: t('application_tracker_desc'),
      color: 'bg-amber-500 hover:bg-amber-600',
      onClick: () => router.push('/applications'),
    },
    {
      icon: Bell,
      label: t('smart_notifications'),
      description: t('smart_notifications_desc'),
      color: 'bg-red-500 hover:bg-red-600',
      onClick: () => router.push('/notifications'),
    },
    {
      icon: ScanLine,
      label: t('document_ocr'),
      description: t('document_ocr_desc'),
      color: 'bg-teal-500 hover:bg-teal-600',
      onClick: () => router.push('/ocr'),
    },
  ];

  const handleCloseApp = () => {
    router.push('/goodbye');
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-primary-50 to-white dark:from-gray-900 dark:to-gray-800">
      {/* Header */}
      <header className="relative bg-white dark:bg-gray-800 shadow-sm border-b border-gray-100 dark:border-gray-700">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex items-center justify-between h-16">
            {/* Left - Hamburger Menu */}
            <button
              onClick={() => setIsSidebarOpen(true)}
              className="p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors"
              aria-label="Open menu"
            >
              <Menu size={24} className="text-gray-700 dark:text-gray-300" />
            </button>

            {/* Center - App Title */}
            <div className="flex-1 flex justify-center">
              <h1 className="text-2xl md:text-3xl font-bold text-center">
                <span className="bg-gradient-to-r from-saffron-500 via-gray-600 to-indianGreen-500 bg-clip-text text-transparent">
                  {t('scheme_sathi')}
                </span>
              </h1>
            </div>

            {/* Right - Language Toggle and Close Button */}
            <div className="flex items-center gap-3">
              <LanguageToggle />
              <button
                onClick={handleCloseApp}
                className="p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors"
                aria-label="Close app"
              >
                <X size={24} className="text-gray-700 dark:text-gray-300" />
              </button>
            </div>
          </div>
        </div>
      </header>

      {/* Main Content */}
      <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* Rural Appeal Banner */}
        <div className="bg-gradient-to-r from-green-500 to-blue-500 text-white p-4 rounded-lg mb-6">
          <h2 className="text-xl font-bold">ЁЯЗоЁЯЗ│ рд╕рд░рдХрд╛рд░реА рдпреЛрдЬрдирд╛ рд╕рд╣рд╛рдпрдХ</h2>
          <p className="text-sm">рдЧрд╛рдВрд╡ рдХреЗ рд▓рд┐рдП, рдХрд┐рд╕рд╛рдиреЛрдВ рдХреЗ рд▓рд┐рдП, рдЖрдкрдХреЗ рд▓рд┐рдП</p>
        </div>

        {/* Hero Section with Main Actions */}
        <section className="text-center mb-16">
          <div className="mb-12">
            <h2 className="text-4xl md:text-5xl font-bold mb-4">
              <span className="bg-gradient-to-r from-saffron-500 via-gray-700 to-indianGreen-500 bg-clip-text text-transparent">
                {t('discover_schemes')}
              </span>
            </h2>
            <p className="text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto leading-relaxed">
              {t('discover_schemes_desc')}
            </p>
          </div>

          {/* Main Action Cards */}
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6 max-w-5xl mx-auto mb-16">
            {mainActions.map((action, index) => {
              let buttonClass = '';
              if (index === 0) buttonClass = 'upload-button';
              if (index === 1) buttonClass = 'chat-button';
              if (index === 2) buttonClass = 'voice-button';
              
              return (
                <button
                  key={index}
                  onClick={action.onClick}
                  className={`${buttonClass} group p-8 rounded-2xl text-white transition-all duration-300 transform hover:scale-105 hover:shadow-xl ${action.color} ${
                    showTutorial && tutorialSteps[tutorialStep]?.target === `.${buttonClass}` 
                      ? 'ring-4 ring-yellow-400 ring-opacity-75 z-50 relative' 
                      : ''
                  }`}
                >
                  <div className="flex flex-col items-center text-center">
                    <div className="p-4 bg-white bg-opacity-20 rounded-full mb-4 group-hover:bg-opacity-30 transition-all">
                      <action.icon size={32} />
                    </div>
                    <h3 className="text-xl font-bold mb-2">{action.label}</h3>
                    <p className="text-sm opacity-90 leading-relaxed">
                      {action.description}
                    </p>
                  </div>
                </button>
              );
            })}
          </div>
        </section>

        {/* Schemes Carousel Section */}
        <section className="mb-8">
          <SchemeCarousel />
        </section>

        {/* Quick Stats */}
        <section className="bg-white rounded-2xl shadow-lg p-8 mb-8">
          <div className="grid grid-cols-2 md:grid-cols-4 gap-6 text-center">
            <div>
              <div className="text-3xl font-bold text-primary-600 mb-2">500+</div>
              <div className="text-gray-600 font-medium">Government Schemes</div>
            </div>
            <div>
              <div className="text-3xl font-bold text-accent-600 mb-2">50L+</div>
              <div className="text-gray-600 font-medium">Citizens Helped</div>
            </div>
            <div>
              <div className="text-3xl font-bold text-orange-500 mb-2">24/7</div>
              <div className="text-gray-600 font-medium">AI Support</div>
            </div>
            <div>
              <div className="text-3xl font-bold text-purple-500 mb-2">12</div>
              <div className="text-gray-600 font-medium">Languages</div>
            </div>
          </div>
        </section>
      </main>

      {/* Footer */}
      <footer className="bg-gray-800 text-white py-8">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <p className="text-gray-300">
            ┬й 2024 Scheme Sathi. Built for the people of India ЁЯЗоЁЯЗ│
          </p>
          <p className="text-gray-400 text-sm mt-2">
            Empowering citizens through technology and government schemes
          </p>
        </div>
      </footer>

      {/* Floating Help Button */}
      <button
        onClick={openSmartHelp}
        className="fixed bottom-4 right-4 bg-green-500 hover:bg-green-600 text-white p-4 rounded-full shadow-lg transition-all duration-300 z-50 animate-pulse"
        aria-label="Smart Help"
        title={language === 'hi' ? 'рд╕реНрдорд╛рд░реНрдЯ рд╕рд╣рд╛рдпрддрд╛ - рддреБрд░рдВрдд рдорджрдж рдкрд╛рдПрдВ' : 'Smart Help - Get instant help'}
      >
        <HelpCircle className="w-6 h-6" />
      </button>

      {/* Help Modal */}
      {isHelpOpen && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
          <div className="bg-white rounded-lg p-6 max-w-2xl w-full max-h-[80vh] overflow-y-auto">
            <div className="flex justify-between items-center mb-4">
              <h3 className="text-xl font-bold">
                {language === 'hi' ? 'я┐╜ рд╡рд┐рд╕реНрддреГрдд рд╕рд╣рд╛рдпрддрд╛' : 'я┐╜ Detailed Help'}
              </h3>
              <button 
                onClick={() => setIsHelpOpen(false)}
                className="text-gray-500 hover:text-gray-700"
              >
                <X className="w-5 h-5" />
              </button>
            </div>

            {/* Help Categories */}
            <div className="mb-6">
              <h4 className="font-semibold mb-3">
                {language === 'hi' ? 'рд╕рд╣рд╛рдпрддрд╛ рд╢реНрд░реЗрдгреА рдЪреБрдиреЗрдВ:' : 'Choose Help Category:'}
              </h4>
              <div className="grid grid-cols-2 md:grid-cols-3 gap-2">
                {Object.keys(helpContent).map((key) => (
                  <button
                    key={key}
                    onClick={() => setHelpCategory(key)}
                    className={`p-2 rounded-lg text-sm font-medium transition-colors ${
                      helpCategory === key 
                        ? 'bg-blue-500 text-white' 
                        : 'bg-gray-100 hover:bg-gray-200'
                    }`}
                  >
                    {helpContent[key].title}
                  </button>
                ))}
              </div>
            </div>

            {/* Enhanced Help Actions */}
            <div className="grid grid-cols-1 md:grid-cols-2 gap-3 mb-4">
              <button
                onClick={startTutorial}
                className="flex items-center justify-center gap-2 bg-purple-500 hover:bg-purple-600 text-white py-2 px-4 rounded-lg transition-colors"
              >
                <span className="text-lg">ЁЯОп</span>
                {language === 'hi' ? 'рд╡рд┐рдЬреБрдЕрд▓ рдЯреНрдпреВрдЯреЛрд░рд┐рдпрд▓' : 'Visual Tutorial'}
              </button>
              <button
                onClick={() => setHelpCategory('troubleshooting')}
                className="flex items-center justify-center gap-2 bg-red-500 hover:bg-red-600 text-white py-2 px-4 rounded-lg transition-colors"
              >
                <span className="text-lg">ЁЯФз</span>
                {language === 'hi' ? 'рд╕рдорд╕реНрдпрд╛ рд╕рдорд╛рдзрд╛рди' : 'Troubleshooting'}
              </button>
            </div>

            {/* Current Help Content */}
            <div className="bg-blue-50 rounded-lg p-4 mb-4">
              <h4 className="font-bold text-lg mb-3">
                {helpContent[helpCategory].title}
              </h4>
              
              {/* Audio Button */}
              <button
                onClick={() => speakHelp(helpCategory)}
                className="w-full flex items-center justify-center gap-3 bg-green-500 hover:bg-green-600 text-white py-3 px-4 rounded-lg transition-colors mb-4"
              >
                <Volume2 className="w-5 h-5" />
                {language === 'hi' ? 'ЁЯФК рд╕реБрдирдХрд░ рд╕рдордЭреЗрдВ' : 'ЁЯФК Listen to Instructions'}
              </button>

              {/* Step by Step Instructions */}
              <div className="space-y-2">
                <h5 className="font-semibold">
                  {language === 'hi' ? 'ЁЯУЭ рд╕реНрдЯреЗрдк рдмрд╛рдИ рд╕реНрдЯреЗрдк рдЧрд╛рдЗрдб:' : 'ЁЯУЭ Step by Step Guide:'}
                </h5>
                {helpContent[helpCategory].steps.map((step, index) => (
                  <div key={index} className="flex items-start space-x-2">
                    <span className="bg-blue-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-xs font-bold flex-shrink-0 mt-0.5">
                      {index + 1}
                    </span>
                    <span className="text-sm">{step}</span>
                  </div>
                ))}
              </div>
            </div>

            {/* Quick Tips */}
            <div className="bg-yellow-50 rounded-lg p-4">
              <h5 className="font-semibold mb-2">
                {language === 'hi' ? 'ЁЯТб рдЦрд╛рд╕ рдмрд╛рддреЗрдВ:' : 'ЁЯТб Quick Tips:'}
              </h5>
              <div className="text-sm space-y-1">
                {language === 'hi' ? (
                  <>
                    <p>тАв рдЗрдВрдЯрд░рдиреЗрдЯ рд╕реНрд▓реЛ рд╣реЛ рддреЛ рдзреИрд░реНрдп рд░рдЦреЗрдВ</p>
                    <p>тАв рдлреЛрдЯреЛ рдЦреАрдВрдЪрддреЗ рд╕рдордп рд░реЛрд╢рдиреА рдЕрдЪреНрдЫреА рд░рдЦреЗрдВ</p>
                    <p>тАв рд╕рднреА рдЬрд╛рдирдХрд╛рд░реА рд╕рд╣реА-рд╕рд╣реА рднрд░реЗрдВ</p>
                    <p>тАв рд╕рдорд╕реНрдпрд╛ рд╣реЛ рддреЛ рд╣реЗрд▓реНрдк рдмрдЯрди рджрдмрд╛рдПрдВ</p>
                  </>
                ) : (
                  <>
                    <p>тАв Be patient if internet is slow</p>
                    <p>тАв Keep good lighting while taking photos</p>
                    <p>тАв Fill all information correctly</p>
                    <p>тАв Press help button if any problem</p>
                  </>
                )}
              </div>
            </div>

            {/* Emergency Contact */}
            <div className="mt-4 p-3 bg-red-50 rounded-lg">
              <h5 className="font-semibold text-red-800 mb-1">
                {language === 'hi' ? 'ЁЯУЮ рдЖрдкрд╛рддрдХрд╛рд▓реАрди рд╕рд╣рд╛рдпрддрд╛:' : 'ЁЯУЮ Emergency Help:'}
              </h5>
              <p className="text-sm text-red-700">
                {language === 'hi' 
                  ? 'рд╣реЗрд▓реНрдкрд▓рд╛рдЗрди: 1800-111-3333 (рдЯреЛрд▓ рдлреНрд░реА)'
                  : 'Helpline: 1800-111-3333 (Toll Free)'
                }
              </p>
            </div>
          </div>
        </div>
      )}

      {/* Visual Tutorial Overlay */}
      {showTutorial && tutorialStep < tutorialSteps.length && (
        <div className="fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center p-4 z-50">
          <div className="bg-white rounded-lg p-6 max-w-md w-full">
            <div className="text-center">
              <div className="text-4xl mb-4">ЁЯОп</div>
              <h3 className="text-lg font-bold mb-2">
                {tutorialSteps[tutorialStep].title}
              </h3>
              <p className="text-gray-600 mb-4">
                {tutorialSteps[tutorialStep].description}
              </p>
              <div className="flex items-center justify-between">
                <span className="text-sm text-gray-500">
                  Step {tutorialStep + 1} of {tutorialSteps.length}
                </span>
                <div className="space-x-2">
                  <button
                    onClick={() => setShowTutorial(false)}
                    className="px-3 py-1 text-gray-500 hover:text-gray-700"
                  >
                    {language === 'hi' ? 'рдЫреЛрдбрд╝реЗрдВ' : 'Skip'}
                  </button>
                  <button
                    onClick={nextTutorialStep}
                    className="bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg"
                  >
                    {tutorialStep < tutorialSteps.length - 1 
                      ? (language === 'hi' ? 'рдЕрдЧрд▓рд╛' : 'Next')
                      : (language === 'hi' ? 'рд╕рдорд╛рдкреНрдд' : 'Finish')
                    }
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Modals - render at the very end for proper z-index layering */}
      <Sidebar 
        isOpen={isSidebarOpen} 
        onClose={() => setIsSidebarOpen(false)}
        onOpenSettings={handleOpenSettings}
      />
      <UploadModal 
        isOpen={isUploadModalOpen} 
        onClose={() => setIsUploadModalOpen(false)} 
      />
      <SettingsModal
        isOpen={isSettingsOpen}
        onClose={() => setIsSettingsOpen(false)}
      />
      
      {/* Offline Indicator */}
      <OfflineIndicator />
    </div>
  );
}